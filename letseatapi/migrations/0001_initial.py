# Generated by Django 4.1.3 on 2024-09-13 13:18

from django.db import migrations, models
import django.db.models.deletion
import letseatapi.models.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('street_address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.CharField(max_length=5)),
                ('image_url', models.URLField()),
                ('joined', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='letseatapi.category')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('uid', models.CharField(default=letseatapi.models.user.generate_uid, max_length=255, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('profile_picture', models.CharField(blank=True, max_length=255, null=True)),
                ('street_address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Spinner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_spinners', to='letseatapi.user')),
                ('secondary_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secondary_spinners', to='letseatapi.user')),
            ],
            options={
                'unique_together': {('primary_user', 'secondary_user')},
            },
        ),
        migrations.CreateModel(
            name='SelectedRestaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='letseatapi.restaurant')),
                ('spinner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='letseatapi.spinner')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='letseatapi.user')),
            ],
        ),
        migrations.AddField(
            model_name='restaurant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='letseatapi.user'),
        ),
        migrations.CreateModel(
            name='RestaurantSpinner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='letseatapi.restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='letseatapi.user')),
            ],
            options={
                'unique_together': {('restaurant', 'user')},
            },
        ),
    ]
